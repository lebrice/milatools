name: Python package

on: [push, pull_request]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
        with:
          python-version: '3.10'
      - run: pip install pre-commit
      - run: pre-commit --version
      - run: pre-commit install
      - run: pre-commit run --all-files


  build:
    needs: pre-commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry install --with=dev

    - name: Check formatting with black
      if: ${{ matrix.python-version == '3.10' }}
      run: poetry run black --check .

    - name: Sort imports
      if: ${{ matrix.python-version == '3.10' }}
      run: poetry run isort -c --df .

  setup_ssh:
    needs: build
    steps:
    - name: Setup passwordless SSH access to localhost for tests (Ubuntu & MacOS)
      runs-on: [ubuntu-latest, macos-latest]
      # Adapted from https://stackoverflow.com/a/60367309/6388696
      run: |
        ssh-keygen -t ed25519 -f ~/.ssh/whatever -N ''
        cat > ~/.ssh/config <<EOF
          Host localhost
            User $USER
            HostName 127.0.0.1
            IdentityFile ~/.ssh/whatever
        EOF
        echo -n 'from="127.0.0.1" ' | cat - ~/.ssh/whatever.pub > ~/.ssh/authorized_keys
        echo "Before fixing permissions on authorized_keys, notice home directory is world read/write"
        ls -la ~/.ssh
        chmod og-rw ~
        ssh -o 'StrictHostKeyChecking no' localhost id

    - name: Setup passwordless SSH access to localhost for tests (Windows)
      runs-on: windows-latest
      # TODO: Use this here to add text to the sshconfig file.
      # https://www.reddit.com/r/PowerShell/comments/asvuu8/comment/egy7nmu/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button
      run: |
        powershell.exe ssh-keygen -t ed25519 -f $env:USERPROFILE\.ssh\whatever -N=''
        powershell.exe "
        Host localhost
          User $($env:USERNAME)
          HostName 127.0.0.1
          IdentityFile $($env:USERPROFILE)/.ssh/whatever
        " | Out-File $env:USERPROFILE/.ssh/config -Encoding ascii -Append
        powershell.exe echo -n 'from="127.0.0.1" ' | cat - ~/.ssh/whatever.pub > ~/.ssh/authorized_keys
        powershell.exe echo "Before fixing permissions on authorized_keys, notice home directory is world read/write"
        powershell.exe chmod og-rw ~
        powershell.exe ssh -o 'StrictHostKeyChecking no' localhost id

  test:
    needs: [build, setup_ssh]
    runs-on: ${{ matrix.platform }}
    strategy:
      max-parallel: 4
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']
    env:
      PLATFORM: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with=dev

    - name: Test with pytest
      run: poetry run pytest --cov=milatools --cov-report=xml --cov-append

    - name: Test with pytest (with -s flag)
      run: poetry run pytest --cov=milatools --cov-report=xml --cov-append -s

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        env_vars: PLATFORM,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: false
